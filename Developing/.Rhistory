#Input corresponde a un dataframe con expediciones con y sin torniquete de toda la semana.
#Subsetting dataframe by turnstile usage
dataframe_st <- subset(dataframe, dataframe$turnstile == 0)
dataframe_ct <- subset(dataframe, dataframe$turnstile_marip == 1)
#Creating boxplot per day
if(length(unique(dataframe_ct$wday)) == 5 & length(unique(dataframe_st$wday)) == 5){
pdf(file = paste("BOX_SEMANA - ",unique(dataframe$ServicioSentido),"-",unique(dataframe$PeriodoTSExpedicion), ".pdf", sep = ""), 10,5)
#Boxplots
b1 <- ggplot(data = dataframe_ct, aes(x= weekday, y= texpedicion)) +
geom_boxplot(aes(fill=weekday)) +
xlab("") +
ylab("TExpedicion (min)") +
theme(legend.position="none") +
coord_cartesian(ylim = c(min(dataframe_ct$texpedicion,dataframe_st$texpedicion), max(dataframe_ct$texpedicion,dataframe_st$texpedicion))) +
ggtitle("With turnstile")
b2 <- ggplot(data = dataframe_st, aes(x= weekday, y= texpedicion)) +
geom_boxplot(aes(fill=weekday)) +
xlab("") +
ylab("TExpedicion (min)") +
coord_cartesian(ylim = c(min(dataframe_ct$texpedicion,dataframe_st$texpedicion), max(dataframe_ct$texpedicion,dataframe_st$texpedicion))) +
ggtitle("Without turnstile")
#Plotting
grid.arrange(b1, b2, ncol = 2, nrow = 1, widths=c(1,1.3), top= paste(unique(dataframe$ServicioSentido),"-",unique(dataframe$PeriodoTSExpedicion), sep = ""))
dev.off()
}
}
fill_patente <- function(placa){
return(paste(unlist(strsplit(as.character(placa), "(?=[A-Za-z])(?<=[0-9])|(?=[0-9])(?<=[A-Za-z])", perl=TRUE)), collapse = "-"))
}
cbind.all <- function (...){
nm <- list(...)
nm <- lapply(nm, as.matrix)
n <- max(sapply(nm, nrow))
do.call(cbind, lapply(nm, function(x) rbind(x, matrix(, n -
nrow(x), ncol(x)))))
}
libs <- c("data.table",
"plyr",
"lubridate",
"chron",
"ggplot2",
"ggpubr",
"gridExtra",
"stringr",
"fuzzyjoin",
"sqldf",
"plotly",
"shiny")
getLibraries(libs)
#Options
options(max.print=10000)
#Setting working space
setwd("/Users/diego/Desktop/Evasion/01_analisis/03_datos/04_NI/")
signals <- read.csv(file = "NI.csv", header = TRUE, sep = ";")
#Editing signals dataframe
signals$ROUTE_NAME <- as.character(signals$ROUTE_NAME)
signals$ROUTE_NAME <- gsub(" ","",signals$ROUTE_NAME)
signals$ROUTE_NAME <- toupper(signals$ROUTE_NAME)
signals$Desde <- as.Date(as.character(signals$Desde))
signals$Hasta <- as.Date(as.character(signals$Hasta))
signals <- signals[!duplicated(signals),]
#duplicados_signal <- signals[duplicated(signals) | duplicated(signals, fromLast = TRUE),]
##Function to load libraries and install packages, if necessary
getLibraries <- function(libs) {
for (lib in libs) {
if(!lib %in% rownames(installed.packages())){install.packages(lib, repos = "http://cran.us.r-project.org")}
library(as.character(lib), character.only = TRUE)
}
}
boxplot_total <- function(dataframe){
#Función que calcula boxplot para el total de datos seperando expediciones con y sin torniquete.
#Dataframe corresponde a las expediciones por servicio-periodo
#Subsetting dataframe by turnstile usage
dataframe_st <- subset(dataframe, dataframe$turnstile == 0)
dataframe_ct <- subset(dataframe, dataframe$turnstile_marip == 1)
if(nrow(dataframe_st) > 0 & nrow(dataframe_ct) > 0){
#Combining two datasets
dataset <- rbind(dataframe_ct,dataframe_st)
dataset$categoria <- c(rep("C/T", nrow(dataframe_ct)),rep("S/T",nrow(dataframe_st)))
pdf(file = paste(unique(dataframe$ServicioSentido),"-",unique(dataframe$PeriodoTSExpedicion), ".pdf", sep = ""), 10,5)
#Boxplots
b1 <- ggplot(data = dataframe_ct, aes(x= "", y= texpedicion)) +
geom_boxplot() +
xlab("") +
stat_summary(fun.y = mean, colour= "green", geom="point",
shape=18, size=3) +
ylab("TExpedicion (min)") +
coord_cartesian(ylim = c(min(dataframe_ct$texpedicion,dataframe_st$texpedicion), max(dataframe_ct$texpedicion,dataframe_st$texpedicion))) +
ggtitle("With turnstile")
b2 <- ggplot(data = dataframe_st, aes(x= "", y= texpedicion)) +
geom_boxplot() +
xlab("") +
ylab("TExpedicion (min)") +
stat_summary(fun.y = mean, colour= "green", geom="point",
shape=18, size=3) +
coord_cartesian(ylim = c(min(dataframe_ct$texpedicion,dataframe_st$texpedicion), max(dataframe_ct$texpedicion,dataframe_st$texpedicion))) +
ggtitle("Without turnstile")
p1 <- ggplot(data=dataset, aes(x=1:nrow(dataset), y=dataset$texpedicion, col=categoria)) +
geom_point() +
xlab("Obs.") +
ylab("TExpedicion (min)") +
theme(legend.title = element_blank(),
axis.text.x = element_blank(),
legend.position="top",
legend.margin=margin(0,0,0,0),
legend.box.margin=margin(-10,-10,-10,-10)) +
coord_cartesian(ylim = c(min(dataframe_ct$texpedicion,dataframe_st$texpedicion), max(dataframe_ct$texpedicion,dataframe_st$texpedicion))) +
ggtitle("Dataset")
#Plotting
grid.arrange(b1, b2, p1, ncol = 3, nrow = 1, widths=c(1,1,2.5), top= paste(unique(dataframe$ServicioSentido),"-",unique(dataframe$PeriodoTSExpedicion), sep = ""))
dev.off()
}
}
boxplot_dia <- function(dataframe){
#Función que calcula boxplot por cada día de una semana.
#Input corresponde a un dataframe con expediciones con y sin torniquete de toda la semana.
#Subsetting dataframe by turnstile usage
dataframe_st <- subset(dataframe, dataframe$turnstile == 0)
dataframe_ct <- subset(dataframe, dataframe$turnstile_marip == 1)
#Creating boxplot per day
if(length(unique(dataframe_ct$wday)) == 5 & length(unique(dataframe_st$wday)) == 5){
pdf(file = paste("BOX_SEMANA - ",unique(dataframe$ServicioSentido),"-",unique(dataframe$PeriodoTSExpedicion), ".pdf", sep = ""), 10,5)
#Boxplots
b1 <- ggplot(data = dataframe_ct, aes(x= weekday, y= texpedicion)) +
geom_boxplot(aes(fill=weekday)) +
xlab("") +
ylab("TExpedicion (min)") +
theme(legend.position="none") +
coord_cartesian(ylim = c(min(dataframe_ct$texpedicion,dataframe_st$texpedicion), max(dataframe_ct$texpedicion,dataframe_st$texpedicion))) +
ggtitle("With turnstile")
b2 <- ggplot(data = dataframe_st, aes(x= weekday, y= texpedicion)) +
geom_boxplot(aes(fill=weekday)) +
xlab("") +
ylab("TExpedicion (min)") +
coord_cartesian(ylim = c(min(dataframe_ct$texpedicion,dataframe_st$texpedicion), max(dataframe_ct$texpedicion,dataframe_st$texpedicion))) +
ggtitle("Without turnstile")
#Plotting
grid.arrange(b1, b2, ncol = 2, nrow = 1, widths=c(1,1.3), top= paste(unique(dataframe$ServicioSentido),"-",unique(dataframe$PeriodoTSExpedicion), sep = ""))
dev.off()
}
}
fill_patente <- function(placa){
return(paste(unlist(strsplit(as.character(placa), "(?=[A-Za-z])(?<=[0-9])|(?=[0-9])(?<=[A-Za-z])", perl=TRUE)), collapse = "-"))
}
cbind.all <- function (...){
nm <- list(...)
nm <- lapply(nm, as.matrix)
n <- max(sapply(nm, nrow))
do.call(cbind, lapply(nm, function(x) rbind(x, matrix(, n -
nrow(x), ncol(x)))))
}
libs <- c("data.table",
"plyr",
"lubridate",
"chron",
"ggplot2",
"ggpubr",
"gridExtra",
"stringr",
"fuzzyjoin",
"sqldf",
"plotly",
"shiny")
getLibraries(libs)
#Options
options(max.print=10000)
#Setting working space
setwd("/Users/diego/Desktop/Evasion/01_analisis/03_datos/04_NI/")
signals <- read.csv(file = "NI.csv", header = TRUE, sep = ";")
#Editing signals dataframe
signals$ROUTE_NAME <- as.character(signals$ROUTE_NAME)
signals$ROUTE_NAME <- gsub(" ","",signals$ROUTE_NAME)
signals$ROUTE_NAME <- toupper(signals$ROUTE_NAME)
signals$Desde <- as.Date(as.character(signals$Desde))
signals$Hasta <- as.Date(as.character(signals$Hasta))
signals <- signals[!duplicated(signals),]
#duplicados_signal <- signals[duplicated(signals) | duplicated(signals, fromLast = TRUE),]
View(signals)
#Setting working space
setwd("/Users/diego/Desktop/Evasion/01_analisis/03_datos/07_Bases_consolidadas/")
#Reading input files
dataframe <- read.csv(file = "base_modelo.csv", header = TRUE, sep = ";")
#Editing expedition dataframe
dataframe$Código.TCAD <- as.character(dataframe$Código.TCAD)
dataframe$Código.TCAD <- gsub(" ","",dataframe$Código.TCAD)
dataframe$Código.TCAD <- toupper(dataframe$Código.TCAD)
dataframe$Fecha <- as.Date(as.character(dataframe$Fecha))
names(dataframe)[50] <- "CodTCAD"
#Merge between route and number of signals by date
database <- sqldf('SELECT dataframe.*, signals.*
FROM dataframe
LEFT JOIN signals
ON dataframe.CodTCAD = signals.ROUTE_NAME
AND dataframe.Fecha BETWEEN signals.Desde AND signals.Hasta')
#Getting NAs
ind_na <- which(is.na(database$NI))
test_na <- database[ind_na,]
#Deleting NAs
database <- database[-ind_na,]
View(database)
View(dataframe)
View(signals)
View(database)
View(test_na)
length(unique(database$ID))
texp_s <- database$TEXP
demanda_total <- database$Y
detenciones <- database$DET
largo_m <- database$L.m.
evasion_total <- database$EV
NI <- database$NI
variables <- data.frame(texp_s,largo_m,demanda_total,evasion_total,detenciones, NI)
summary(variables)
View(database)
#histogram for expedition time by turnstile usage
texpedicion <- data.frame(database$TEXP)
names(texpedicion) <- "texp"
#Making plot
ggplot(texpedicion, aes(texpedicion$texp)) +
geom_histogram(bins=40) +
theme_bw() +
theme(panel.border = element_blank()) +
labs(x= "Tiempo de expedición (s)", y= "Frecuencia")
# #Making interactive plot
# inputPanel(
#   selectInput("n_breaks", label = "Number of bins:", choices = seq(10,100,10), selected = 30)
#
#   #sliderInput("bw_adjust", label = "Bandwidth adjustment:", min = 0.2, max = 2, value = 1, step = 0.2)
# )
#
# renderPlot({
#   ggplot(texpedicion, aes(texpedicion$texp)) +
#   geom_histogram(bins= as.numeric(input$n_breaks)) +
#   theme_bw() +
#   theme(panel.border = element_blank())
# })
#Interactive plot
# p <- ggplot(texpedicion, aes(texpedicion$texp)) +
#   geom_histogram(bins=40) +
#   theme_bw() +
#   theme(panel.border = element_blank())
#
# ggplotly(p)
# p <- ggplotly(p)
#
# # Create a shareable link to your chart
# # Set up API credentials: https://plot.ly/r/getting-started
# htmlwidgets::saveWidget(as_widget(p), "histograma_texp.html")
#histogram for expedition time by turnstile usage
lrecorridos <- data.frame(database$L.m.)
names(lrecorridos) <- "l_recorridos"
#Making plot
ggplot(lrecorridos, aes(lrecorridos$l_recorridos)) +
geom_histogram(bins=40) +
theme_bw() +
theme(panel.border = element_blank()) +
labs(x= "Largo de los recorridos (m)", y= "Frecuencia")
ggplot(lrecorridos, aes(x="", y=lrecorridos$l_recorridos)) +
geom_boxplot() +
labs(x= "", y= "Largo del recorrido (m)")
#Boxplot stats
#a vector of length 5, containing the extreme of the lower whisker, the lower ‘hinge’, the median, the upper ‘hinge’ and the extreme of the upper whisker.
boxplot.stats(lrecorridos$l_recorridos)
View(database)
View(database)
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$Y, database$NI)
names(data.all) <- c("texp","largo","detenciones","Y","NI")
modelo_01 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_01)
#Changing distance from meters to km
database$L.m. <- database$L.m./1000
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$Y, database$NI)
names(data.all) <- c("texp","largo","detenciones","Y","NI")
modelo_01 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_01)
#Adding time period variables
period <- as.data.frame(model.matrix(~database$Periodo-1))
View(period)
names(period) <- sprintf("P%s",3:10)
periodo_punta <- period$P4+period$P9
View(period)
period <- as.data.frame(model.matrix(~database$Periodo-1))
View(period)
names(period) <- sprintf("P%s",3:10)
periodo_punta <- period$P4+period$P9
View(period)
View(data.all)
#Adding time period variables
period <- as.data.frame(model.matrix(~database$Periodo-1))
names(period) <- sprintf("P%s",3:10)
periodo_punta <- period$P4+period$P9
#Signals by period
NI_peak <- periodo_punta * database$NI
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$Y, database$NI, NI_peak)
names(data.all) <- c("texp","largo","detenciones","Y","NI", "NI_peak")
modelo_02 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_02)
#Computing demand during peak periods
Y_peak <- database$Y * periodo_punta
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$Y,Y_peak, database$NI, NI_peak)
names(data.all) <- c("texp","largo","detenciones","Y","Y_Peak", "NI", "NI_peak")
modelo_03 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_03)
View(database)
#Adding 3B turnstile variable
database$turnstile_3b <- 0
ind_3b <- which(database$n_turnstile==0 & database$turnstile_marip == 0)
database$turnstile_3b[ind_3b] <- 1
#Adding turnstile variable during peak periods
Y_mar <- database$Y * database$turnstile_marip
Y_3b <- database$Y * database$turnstile_3b
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$Y,Y_peak, Y_mar,Y_3b, database$NI)
names(data.all) <- c("texp","largo","detenciones","Y","Y_Peak","Y_Marip","Y_3b", "NI")
modelo_04 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_04)
#Adding turnstile variable during peak periods
Y_peak_mar <- Y_peak * database$turnstile_marip
Y_peak_3b <- Y_peak * database$turnstile_3b
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$Y, Y_peak, Y_peak_mar,Y_peak_3b, database$NI)
names(data.all) <- c("texp","largo","detenciones","Y","Y_Peak","Y_Peak_Marip","Y_Peak_3b", "NI")
modelo_05 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_05)
#Adding 3B turnstile variable
database$turnstile_3b <- 0
ind_3b <- which(database$n_turnstile==0 & database$turnstile_marip == 0)
database$turnstile_3b[ind_3b] <- 1
#Adding turnstile variable during peak periods
Y_mar <- database$Y * database$turnstile_marip
Y_3b <- database$Y * database$turnstile_3b
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$Y,Y_peak, Y_mar,Y_3b, database$NI)
names(data.all) <- c("texp","largo","detenciones","Y","Y_Peak","Y_Marip","Y_3b", "NI")
modelo_04 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_04)
View(database)
#Demanda por el resto de las puertas
#Y_resto <- database$I.P2 + database$I.P3 + database$I.P4
#Adding turnstile variable during peak periods
#Y_peak_mar <- Y_peak * database$turnstile_marip
#Y_peak_3b <- Y_peak * database$turnstile_3b
#Adding 3B turnstile variable
database$turnstile_3b <- 0
ind_3b <- which(database$n_turnstile==0 & database$turnstile_marip == 0)
database$turnstile_3b[ind_3b] <- 1
#Adding turnstile variable during peak periods
Y_mar <- database$Y * database$turnstile_marip
Y_3b <- database$Y * database$turnstile_3b
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$Y, Y_mar,Y_3b, database$NI)
names(data.all) <- c("texp","largo","detenciones","Y","Y_Marip","Y_3b", "NI")
modelo_04 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_04)
#Tiempo crucero extra
largo_peak <- database$L.m. * periodo_punta
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., largo_peak, database$DET, database$Y,Y_peak, Y_mar,Y_3b, database$NI)
names(data.all) <- c("texp","largo","largo_peak","detenciones","Y","Y_Peak","Y_Marip","Y_3b", "NI")
modelo_06 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_06)
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., largo_peak, database$DET, database$Y, Y_mar,Y_3b, database$NI)
names(data.all) <- c("texp","largo","largo_peak","detenciones","Y","Y_Marip","Y_3b", "NI")
modelo_07 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_07)
#Adding 3B turnstile variable
database$turnstile_3b <- 0
ind_3b <- which(database$n_turnstile==0 & database$turnstile_marip == 0)
database$turnstile_3b[ind_3b] <- 1
#Adding turnstile variable during peak periods
Y_mar <- database$Y * database$turnstile_marip
Y_3b <- database$Y * database$turnstile_3b
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$Y,Y_peak, Y_mar, database$NI)
names(data.all) <- c("texp","largo","detenciones","Y","Y_Peak","Y_Marip", "NI")
modelo_04 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_04)
#Demanda por el resto de las puertas
Y_resto <- database$I.P2 + database$I.P3 + database$I.P4
Y_P1_peak <- database$I.P1 * periodo_punta
Y_P1_mar <- database$I.P1 * database$turnstile_marip
Y_P1_mar_peak <- database$I.P1 * database$turnstile_marip * periodo_punta
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$I.P1,Y_P1_peak, Y_P1_mar, Y_P1_mar_peak, Y_resto, database$NI)
names(data.all) <- c("texp","largo","detenciones","Y_P1","Y_P1_peak","Y_P1_mar", "Y_P1_mar_peak","Y_resto","NI")
modelo_05 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_05)
#Demanda por el resto de las puertas
Y_resto <- database$I.P2 + database$I.P3 + database$I.P4
Y_P1_peak <- database$I.P1 * periodo_punta
Y_P1_mar <- database$I.P1 * database$turnstile_marip
Y_P1_mar_peak <- database$I.P1 * database$turnstile_marip * periodo_punta
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$I.P1,Y_P1_peak, Y_P1_mar, Y_resto, database$NI)
names(data.all) <- c("texp","largo","detenciones","Y_P1","Y_P1_peak","Y_P1_mar","Y_resto","NI")
modelo_05 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_05)
#Demanda por el resto de las puertas
Y_resto <- database$I.P2 + database$I.P3 + database$I.P4
Y_P1_peak <- database$I.P1 * periodo_punta
Y_P1_marip <- database$I.P1 * database$turnstile_marip
Y_P1_mar_peak <- database$I.P1 * database$turnstile_marip * periodo_punta
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$I.P1,Y_P1_peak, Y_P1_marip, Y_resto, database$NI)
names(data.all) <- c("texp","largo","detenciones","Y_P1","Y_P1_peak","Y_P1_marip","Y_resto","NI")
modelo_05 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_05)
#Demanda por el resto de las puertas
Y_resto <- database$I.P2 + database$I.P3 + database$I.P4
Y_P1_peak <- database$I.P1 * periodo_punta
Y_P1_marip <- database$I.P1 * database$turnstile_marip
Y_P1_mar_peak <- database$I.P1 * database$turnstile_marip * periodo_punta
#Dataframe
data.all <- data.frame(database$TEXP, database$L.m., database$DET, database$I.P1,Y_P1_peak, Y_P1_marip, Y_resto, database$NI)
names(data.all) <- c("texp","largo","detenciones","Y_P1","Y_P1_peak","Y_P1_marip","Y_resto","NI")
modelo_05 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_05)
Y_P1_PN_peak <- database$I.PN.P1 * periodo_punta
Y_P1_PN_marip <- database$I.PN.P1 * database$turnstile_marip
Y_P1_PN_mar_peak <- database$I.PN.P1 * database$turnstile_marip * periodo_punta
Y_P1_ZP_peak <- database$I.ZP.P1 * periodo_punta
Y_P1_ZP_marip <- database$I.ZP.P1 * database$turnstile_marip
Y_P1_ZP_mar_peak <- database$I.ZP.P1 * database$turnstile_marip * periodo_punta
#Dataframe
data.all <- data.frame(database$TEXP,
database$L.m.,
database$DET,
database$I.PN.P1,
Y_P1_PN_peak,
Y_P1_PN_marip,
Y_P1_PN_mar_peak,
database$I.ZP.P1,
Y_P1_ZP_peak,
Y_P1_ZP_marip,
Y_P1_ZP_mar_peak,
Y_resto,
database$NI)
names(data.all) <- c("texp",
"largo",
"detenciones",
"Y_PN_P1",
"Y_PN_P1_peak",
"Y_PN_P1_marip",
"Y_PN_P1_marip_peak",
"Y_ZP_P1",
"Y_ZP_P1_peak",
"Y_ZP_P1_marip",
"Y_ZP_P1_marip_peak",
"Y_resto",
"NI")
modelo_06 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_06)
Y_P1_PN_peak <- database$I.PN.P1 * periodo_punta
Y_P1_PN_marip <- database$I.PN.P1 * database$turnstile_marip
Y_P1_PN_mar_peak <- database$I.PN.P1 * database$turnstile_marip * periodo_punta
Y_P1_ZP_peak <- database$I.ZP.P1 * periodo_punta
Y_P1_ZP_marip <- database$I.ZP.P1 * database$turnstile_marip
Y_P1_ZP_mar_peak <- database$I.ZP.P1 * database$turnstile_marip * periodo_punta
#Dataframe
data.all <- data.frame(database$TEXP,
database$L.m.,
database$DET,
database$I.PN.P1,
Y_P1_PN_peak,
Y_P1_PN_marip,
database$I.ZP.P1,
Y_P1_ZP_peak,
Y_P1_ZP_marip,
Y_resto,
database$NI)
names(data.all) <- c("texp",
"largo",
"detenciones",
"Y_PN_P1",
"Y_PN_P1_peak",
"Y_PN_P1_marip",
"Y_ZP_P1",
"Y_ZP_P1_peak",
"Y_ZP_P1_marip",
"Y_resto",
"NI")
modelo_07 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_07)
#Demanda por el resto de las puertas
Y_resto <- database$I.P2 + database$I.P3 + database$I.P4 + database$I.ZP.P1
Y_P1_PN_peak <- database$I.PN.P1 * periodo_punta
Y_P1_PN_marip <- database$I.PN.P1 * database$turnstile_marip
Y_P1_PN_mar_peak <- database$I.PN.P1 * database$turnstile_marip * periodo_punta
Y_P1_ZP_peak <- database$I.ZP.P1 * periodo_punta
Y_P1_ZP_marip <- database$I.ZP.P1 * database$turnstile_marip
Y_P1_ZP_mar_peak <- database$I.ZP.P1 * database$turnstile_marip * periodo_punta
#Dataframe
data.all <- data.frame(database$TEXP,
database$L.m.,
database$DET,
database$I.PN.P1,
Y_P1_PN_peak,
Y_P1_PN_marip,
Y_resto,
database$NI)
names(data.all) <- c("texp",
"largo",
"detenciones",
"Y_PN_P1",
"Y_PN_P1_peak",
"Y_PN_P1_marip",
"Y_resto",
"NI")
modelo_07 <- lm(as.formula("texp~."), data = data.all)
summary(modelo_07)
